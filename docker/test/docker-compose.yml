services:
  chain:
    image: docker-regis.iex.ec/poco-chain:1.0.0-poco-v5.5.0-voucher-v1.0.0-nethermind
    restart: unless-stopped
    ports:
      - 8545:8545
      # - 8546:8546 # port (not required for integration tests) fails to open on CI

  ipfs:
    restart: unless-stopped
    image: ipfs/go-ipfs:v0.22.0
    ports:
      - 8080:8080
      - 5001:5001

  graphnode-postgres:
    image: postgres:16.4
    restart: unless-stopped
    command:
      - "postgres"
      - "-cshared_preload_libraries=pg_stat_statements"
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"

  graphnode:
    image: graphprotocol/graph-node:v0.35.1
    restart: unless-stopped
    ports:
      - 8000:8000 # GraphQL HTTP
      # - 8001:8001 # GraphQL WS
      - 8020:8020 # admin RPC
      # - 8040:8040 # metrics
    environment:
      postgres_host: graphnode-postgres
      postgres_port: 5432
      postgres_user: ${DB_USER}
      postgres_pass: ${DB_PASSWORD}
      postgres_db: ${DB_NAME}
      ipfs: ipfs:5001
      ethereum: ${NETWORK_NAME}:http://chain:8545
    healthcheck:
      test: netcat -w 1 0.0.0.0 8020
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  poco-subgraph-deployer:
    build:
      context: ../..
      dockerfile: docker/Dockerfile
    environment:
      GRAPHNODE_URL: http://graphnode:8020
      IPFS_URL: http://ipfs:5001
      NETWORK_NAME: ${NETWORK_NAME}
    depends_on:
      graphnode:
        condition: service_healthy
